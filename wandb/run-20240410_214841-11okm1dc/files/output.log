
episode 0
Simulating
original size:  torch.Size([128, 3, 48, 100])
conv1 후 size:  torch.Size([128, 16, 24, 50])
conv2 후 size:  torch.Size([128, 32, 12, 25])
2차원으로 변환:  torch.Size([128, 9600])
인덱스 추가 후 크기 torch.Size([128, 9600])
Traceback (most recent call last):
  File "C:\Users\MNL431\Desktop\traffic_DQN\training_main.py", line 84, in <module>
    Simulation.run(episode,epsilon)
  File "C:\Users\MNL431\Desktop\traffic_DQN\simulation.py", line 192, in run
    self.optimize_model()
  File "C:\Users\MNL431\Desktop\traffic_DQN\simulation.py", line 311, in optimize_model
    q_eval = self.policy_net(state_batch).gather(1, action_batch)
  File "C:\Users\MNL431\Anaconda3\envs\cartpoletest\lib\site-packages\torch\nn\modules\module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "C:\Users\MNL431\Desktop\traffic_DQN\Model.py", line 32, in forward
    x = F.relu(self.fc1(x))
  File "C:\Users\MNL431\Anaconda3\envs\cartpoletest\lib\site-packages\torch\nn\modules\module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "C:\Users\MNL431\Anaconda3\envs\cartpoletest\lib\site-packages\torch\nn\modules\linear.py", line 94, in forward
    return F.linear(input, self.weight, self.bias)
  File "C:\Users\MNL431\Anaconda3\envs\cartpoletest\lib\site-packages\torch\nn\functional.py", line 1753, in linear
    return torch._C._nn.linear(input, weight, bias)
RuntimeError: mat1 dim 1 must match mat2 dim 0